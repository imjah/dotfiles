#!/bin/bash

add_extention() {
	grep ".$2$" <<< "$1" || echo "$1.$2"
}

quit() {
	echo "$1"; exit "$2"
}

quit_on_misconfiguration() {
	test -d $PROJECTS_INTERNAL_DIR || quit "Internal directory not found" 1
	test -d $PROJECTS_EXTERNAL_DIR || quit "External directory not found" 2
}

init() {
	git init --bare "$1"
}

clone() {
	git clone $3 "$1" "$2"
}

remove() {
	read -p "Remove $1? (y/n): " a; test "$a" = "y" && rm -r $1
}

main() {
	quit_on_misconfiguration

	repo_internal="$PROJECTS_INTERNAL_DIR/$2"
	repo_external="$PROJECTS_EXTERNAL_DIR/$(add_extention "$2" "git")"

	case "$1" in
		-l | "")
			ls $PROJECTS_EXTERNAL_DIR
		;;
		-i)
			init $repo_external
		;;
		-n)
			init $repo_external && clone $repo_external $repo_internal
		;;
		-c)
			clone $repo_external $repo_internal
		;;
		-b)
			clone $repo_external $repo_internal "--bare"
		;;
		-r)
			remove $repo_external
		;;
		-R)
			remove $repo_external
			remove $repo_internal
		;;
		*)
			echo "Usage: $(basename $0) [<option>] [<name>]"
			echo
			echo "Options:"
			echo "  -l  List external repositories (default)"
			echo "  -c  Clone repository"
			echo "  -b  Clone bare repository"
			echo "  -i  Initialize repository"
			echo "  -n  Initialize and clone repository"
			echo "  -r  Remove external repository"
			echo "  -R  Remove external and internal repository"
			echo "  -h  Show help"
		;;
	esac
}; main $@
